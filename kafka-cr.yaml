apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: kb
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true


---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: kb
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
      - "confluent.cluster.link.enable=true"
      - "ldap.search.mode=USERS"
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: mtls
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: "sasl-usr1"
      tls:
        enabled: false
  metricReporter:
    bootstrapEndpoint: kafka:9071
    enabled: true
    authentication:
      type: mtls
    tls:
      enabled: true
  authorization:
    type: rbac
    superUsers:
    - "User:mds"
    - "User:superUser"
    - "User:schemaregistryUser"
    - "User:connectAdmin"
    - "User:user1"
    - "User:restAdmin"
    - "User:kafka"
    - "User:admin"
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token1
     # externalAccess:
       # type: loadBalancer
       # loadBalancer:
         # domain: my.domain
         # prefix: rb-mds
      provider:
        type: ldap
        ldap:
          address: ldap://my-openldap.kb.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: ldapad
          configurations:
           # groupNameAttribute: cn
           # groupObjectClass: organizationalRole
           # groupMemberAttribute: memberUid
           # groupMemberAttributePattern: CN=(.*), OU=users, DC=example, DC=org
           # groupSearchBase:  ou=users, dc=example, dc=org
           # groupSearchScope: 2
            userNameAttribute: uid
            userMemberOfAttributePattern: CN=(.*),OU=groups,DC=example,DC=org
            userObjectClass: inetOrgPerson
            userSearchBase: dc=example,dc=org
            userSearchScope: 2
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: restsup4
    zookeeper:
      endpoint: zookeeper.kb.svc.cluster.local:2181

---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: kafkarest
  namespace: kb
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: restsup4

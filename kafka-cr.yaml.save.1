apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: kb
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.4.0
    init: confluentinc/confluent-init-container:2.6.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true


---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: kb
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.cluster.link.enable=true
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: mtls
      tls:
        enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: "sasl-secret1"
      tls:
        enabled: false
  metricReporter:
    bootstrapEndpoint: kafka:9071
    enabled: true
    authentication:
      type: mtls
    tls:
      enabled: true
  authorization:
    type: rbac
    superUsers:
    - "User:mds"
    - "User:superUser"
    - "User:schemaregistryUser"
    - "User:connectAdmin"
    - "User:user1"
    - "User:charlie"
    - "User:restAdmin"
    - "User:kafka"
    - "User:admin"
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
     # externalAccess:
       # type: loadBalancer
       # loadBalancer:
         # domain: my.domain
         # prefix: rb-mds
      provider:
        type: ldap
        ldap:
          address: ldap://my-openldap.kb.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: ldapcred
          configurations:
            groupNameAttribute: cn
            groupObjectClass: organizationalRole
            groupMemberAttribute: memberUid
            groupMemberAttributePattern: CN=(.*),OU=users,DC=example,DC=org
            groupSearchBase: ou=users,dc=example,dc=org
            groupSearchScope: 2
           # userNameAttribute: uid
           # userMemberOfAttributePattern: CN=(.*),OU=users,DC=example,DC=org
           # userObjectClass: inetOrgPerson
           # userSearchBase: ou=users,dc=example,dc=org
           # userSearchScope: Subtree
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: rest-admin
      tls:
        enabled: false
    zookeeper:
      endpoint: zookeeper.kb.svc.cluster.local:2181

---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: mosheconnect
spec:
  configOverrides:
    server:
      - plugin.path=/usr/share/java,/usr/share/confluent-hub-components,/mnt/dataconnect/confluentinc-kafka-connect-jdbc-10.2.5
  mountedVolumes:
      volumes:
        - name: task-pv-storage
          persistentVolumeClaim:
            claimName: task-pv-claim
      volumeMounts:
        - mountPath: "/mnt/dataconnect"
          name: task-pv-storage 
  keyConverterType: io.confluent.connect.avro.AvroConverter
  valueConverterType: io.confluent.connect.avro.AvroConverter
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  authorization:
    type: rbac
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: mtls
        jaasConfig:
          secretRef: ssl-secret
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.kb.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: connect-mds-client
      tls:
        enabled: true

    schemaRegistry:
      url: https://schemaregistry.kb.svc.cluster.local:8081
      tls:
        enabled: true
  mountedSecrets:
  - secretRef: mysql-credential

---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: kb
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.5.0
    init: confluentinc/confluent-init-container:2.7.0
  authorization:
    type: rbac
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: mtls
        jaasConfig:
          secretRef: ssl-secret
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.kb.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: sr-mds-client
      tls:
        enabled: true

---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: kb
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-admin
    tls:
      enabled: false

---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: internal-schemaregistry-schema-validation
  namespace: kb
spec:
  principal:
    name: kafka
    type: user
  clustersScopeByIds:
    schemaRegistryClusterId: id_schemaregistry_kb
    kafkaClusterId: 17LujXJ7Sr2x_oXP7KNxhA
  resourcePatterns:
  - name: "*"
    patternType: LITERAL
    resourceType: Subject
  role: DeveloperRead

